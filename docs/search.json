[
  {
    "objectID": "iris_dataset.html#data-cleaning-eda",
    "href": "iris_dataset.html#data-cleaning-eda",
    "title": "Cleaning Iris dataset",
    "section": "Data cleaning & EDA",
    "text": "Data cleaning & EDA\nThe explorations that I will conduct in this document will involve the following:\n\nMessy column names\nImproper variable types\nInvalid or inconsistent values\nMissing values\nNon-standard data formats"
  },
  {
    "objectID": "iris_dataset.html#undersdaning-the-dataset",
    "href": "iris_dataset.html#undersdaning-the-dataset",
    "title": "Cleaning Iris dataset",
    "section": "Undersdaning the dataset",
    "text": "Undersdaning the dataset\nNow, we are going to run diffrent codes, just to understand our dataset.\n\nmessy_iris |&gt; #Checking the dimensions of the data (The data has 150 rows, and 5 columns)\n  dim()\n\n[1] 150   5\n\n\n\nmessy_iris %&gt;% # Taking a quick look at our dataset\n  glimpse()\n\nRows: 150\nColumns: 5\n$ Sepal.Length &lt;chr&gt; \"5.1\", \"4.9\", \"4.7\", \"4.6\", \"5\", \"5.4\", \"4.6\", \"5\", \"4.4\"…\n$ Sepal.Width  &lt;chr&gt; \"3.5\", NA, \"3.2\", NA, \"3.6\", \"3.9\", \"3.4\", \"3.4\", \"2.9\", …\n$ Petal.Length &lt;chr&gt; \"1.4\", \"1.4\", \"1.3 \", \"1.5\", \"1.4\", \"1.7\", \"1.4\", \"1.5\", …\n$ Petal.Width  &lt;chr&gt; NA, \"0.2\", \"0.2\", \"0.2\", \"0.2\", \"0.4\", \"0.3\", \"0.2\", \"0.2…\n$ Species      &lt;chr&gt; \"setosa\", \"setosa\", \"set-o(sa\", \"SETOSA\", \"SETOSA\", \"seto…\n\n\nIt’s good to understand our data. We have also noted that the data type for all the columns is character (chr). This can limit certain operations that require our data to be in numeric form. We are also going to fix this.\n\nmessy_iris %&gt;% # Understanding the column names of the dataset\n  colnames()\n\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\n\n\nmessy_iris %&gt;% # Checking for unique values of Species. \n  select(Species) %&gt;% \n  distinct()\n\n          Species\n1          setosa\n2        set-o(sa\n3          SETOSA\n4         setos%a\n5         se-tosa\n6         setos)a\n7        (setosa \n8         (setosa\n9         seto_sa\n10        set+osa\n11           &lt;NA&gt;\n12        se&tosa\n13        s-etosa\n14        seto^sa\n15       s^e!tosa\n16        setosa \n17        seto*sa\n18        )setosa\n19        set*osa\n20        s$etosa\n21        set^osa\n22        SETOSA \n23        set)osa\n24        seto+sa\n25        se.tosa\n26       se^t%osa\n27        s*etosa\n28  ve.r*sicolo&r\n29    versicolo$r\n30   v^ersicolo!r\n31  (ver%sicolor \n32    ver&sicolor\n33     versicolor\n34   versic-olor \n35    $versicolor\n36   versic+olor \n37   ve_rsicolo_r\n38   V!ERSICOL_OR\n39    ver%sicolor\n40   ver)sic#olor\n41   $versico$lor\n42   (ve!rsicolor\n43    vers+icolor\n44  -ve^rsicolor \n45   VER%SICOLO)R\n46    VERSI(COLOR\n47     VERSICOLOR\n48    vers&icolor\n49   ve-rsi%color\n50   VER_SICOLO&R\n51   ve+rsicol^or\n52   versic@o_lor\n53   versic!olo*r\n54   v&ersico^lor\n55    (versicolor\n56    versico!lor\n57   ver)sic)olor\n58   vers(i(color\n59   ve.rsicolor \n60    v%ersicolor\n61   versi_co.lor\n62   ver&sic-olor\n63   .versicol.or\n64    vi^r%ginica\n65    vir*gi@nica\n66      virginica\n67    $virgin@ica\n68   %vi_rgini.ca\n69     virg!inica\n70     vir^ginica\n71     virgin(ica\n72     virgin^ica\n73     vi)rginica\n74    vi_rgi)nica\n75     v(irginica\n76    virgini&c!a\n77    virgini$ca \n78     virgi(nica\n79     virginic$a\n80 +vir$gin$i%c-a\n81   *v^irgin-ica\n82    vir%gini@ca\n83      VIRGINICA\n84     v#irginica\n85    v$irginica \n86    virg#inic)a\n87    (virg$inica\n88     virginica \n89    virgini(ca \n90   @virgi$ni)ca\n91    vir.g.inica\n\n\nThe dataset is supposed to have three different species of the flower namely; setosa, viginica, and versicolor. However, we can quickly note from code output that we have over 68 different variations of these species. Again, we are going to fix this too!!"
  },
  {
    "objectID": "iris_dataset.html#data-cleaning-process",
    "href": "iris_dataset.html#data-cleaning-process",
    "title": "Cleaning Iris dataset",
    "section": "Data Cleaning process",
    "text": "Data Cleaning process\nFirstly, we are going to take the messy dataset, and load it into the clean_iris data object as this is what will finally house our clean dataset. Immediately, we will start cleaning by working on the column names using the clean_names() function from the janitor package.\n\nclean_iris&lt;-messy_iris %&gt;% \n  clean_names()\nclean_iris |&gt; \n  head(10)\n\n   sepal_length sepal_width petal_length petal_width  species\n1           5.1         3.5          1.4        &lt;NA&gt;   setosa\n2           4.9        &lt;NA&gt;          1.4         0.2   setosa\n3           4.7         3.2         1.3          0.2 set-o(sa\n4           4.6        &lt;NA&gt;          1.5         0.2   SETOSA\n5             5         3.6          1.4         0.2   SETOSA\n6           5.4         3.9          1.7         0.4  setos%a\n7           4.6         3.4          1.4         0.3  se-tosa\n8             5         3.4          1.5         0.2  setos)a\n9           4.4         2.9          1.4         0.2 (setosa \n10          4.9         3.1          1.5         0.1  (setosa\n\n\nNote that our column names are now in lower case using the snake_case format. The next thing that we are going to do is ensure that the species column only has the three different values.\n\nhead(clean_iris$species)\n\n[1] \"setosa\"   \"setosa\"   \"set-o(sa\" \"SETOSA\"   \"SETOSA\"   \"setos%a\" \n\n\n\nbad_setosa &lt;- c( \"setos)a\", \"setosa \", \"setosa\",\"setosa\", \"setosa\", \"setosa \", \"seto_sa\",  \"s&etosa\",  \"setosa\", \"SETOSA\", \"setosa\", \"se(tosa\", \"setosa\",\"setosa\", \"setosa\",\"setosa\",\"*setosa\",\"set_osa\",\"setosa\",         \"se@tosa\",\"setosa\", \"(s_etos.a\",      \"set(osa\",\"setos$a\",\"seto-s(a\",\"(SETOSA\",\"setosa \", \"s-eto%sa\",       \"setosa\",\"SETOSA\", \"seto.sa\",\"setosa\",\"setos^a\", \"setosa\",\"set$osa\", \"setosa\", \"se+tosa\",\"seto*sa\",        \"S)ETOSA\",\"setos*a\", \"setosa\",\"set!osa\",\"setosa\",\"setosa\",\"s@et#osa \",\"setosa\",\"setosa\")\n\n\nbad_versicolor&lt;-c(\"versic(olor\",\"ver@sicolor\",\"versico_lor\",\"ve#rsicolor\",\"versicolor\",          \"versico@lor\",\"versicolor\",\"versicolor\",\"versicolor\",\"versicolor\",\"versicolor\",\"vers_i%c#ol%or\", \"V*ERSICOLOR\",\"ver!sicolor\",\"+versicolo^r\",\"versicolor\",\"versico)l^or\",\"versicol^or\",\"ve&rsicolor\",\"versicolor\",\"$vers+icolor\",\"versicolor \",\")versicolor\", \"versicolor\",\"versicolor\",\"versicolor\",\"versicolor \",\"ver&sicolor \",\"versico(lo$r\",\"versi_color\",\"versicolor\",\"vers-ic.ol%o&r\", \"versicolor\",\"versicolor\",     \"versicolor\",\"*versicolor\",\"versicolor\",\"versicol!or\",\"&versicolor\",\"%versicol%or \",  \"v%ersicolor\",\"v+ersicolor\")\n\n\nbad_virginica &lt;- c(\"virginica\",\"vir!ginica\",\"virginica\",\"VIRGINICA\",\"virginica\",\"virginica\",     \n\"virginica\",\"virg^inica\",\"virginica\",\"$virg(inica\",\"virginica\",\"virginica \",\"virginica\",     \"virginica\",\"virgini+ca\",\"vir-ginica\", \"virginica\",\"virginica\",\"virgin!ica\",\"virginica\",   \".virginic#a\",\"virginica\",\"virginic_a\",\"virginica\",\"v(irgi$nica\",\"virginica\",\"virginic#a\",     \"vir.gini@ca\",\"virginica \",\"v#irgini(ca\", \"virginica\",\"virginica\",\"virginica\",\"virginica\",      \"virgi^nica\",\"virginica\",\"virginica\",\"virginica\",\"VIRGINICA\",\"virginica\",\"virginica\")\n\nThe code below, is going to replace bad species with the right value using dplyr case_when function\n\nclean_iris&lt;-clean_iris %&gt;% \n   mutate(species_clean = case_when(species %in% bad_setosa ~ \"setosa\",\n                                    species %in% bad_versicolor ~ \"versicolor\",\n                                    species %in% bad_virginica ~ \"virginica\"))\n\nunique(clean_iris$species_clean)\n\n[1] \"setosa\"     NA           \"versicolor\" \"virginica\" \n\n\n\nConverting variables\n\nclean_iris |&gt; \n  mutate(species_clean=as_factor(species_clean),\n         sepal_length=as.numeric(sepal_length),\n         sepal_width=as.numeric(sepal_width),\n         petal_length=as.numeric(petal_length),\n         petal_width=as.numeric(petal_width)) |&gt; \n  glimpse()\n\nRows: 150\nColumns: 6\n$ sepal_length  &lt;dbl&gt; 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4…\n$ sepal_width   &lt;dbl&gt; 3.5, NA, 3.2, NA, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4…\n$ petal_length  &lt;dbl&gt; 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1…\n$ petal_width   &lt;dbl&gt; NA, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…\n$ species       &lt;chr&gt; \"setosa\", \"setosa\", \"set-o(sa\", \"SETOSA\", \"SETOSA\", \"set…\n$ species_clean &lt;fct&gt; setosa, setosa, NA, setosa, setosa, NA, NA, setosa, NA, …\n\n\nAfter conversion, we now have the double precision, factor, and character data types. This will be important in our analysis."
  },
  {
    "objectID": "iris_dataset.html#missing-values",
    "href": "iris_dataset.html#missing-values",
    "title": "Cleaning Iris dataset",
    "section": "Missing values",
    "text": "Missing values\nThere are many ways of working with missing values including methods such as listwise deletion, pairwise deletion, imputation etc. In this section we are going to use imputation by employing a package; missForest, which uses random forest to train data of observed values of data matrix to predict missing values.\n\n#install.packages(\"missForest\")\nlibrary(missForest)\n\niris_impute&lt;-clean_iris |&gt; \n  select(-species) |&gt; \n  mutate(across(c(sepal_length,sepal_width,petal_length,petal_width), as.numeric),\n         species_clean = as.factor(species_clean))\n\n\niris_imputed&lt;-missForest(iris_impute,xtrue = ,maxiter = 10,ntree = 100,verbose = FALSE)\n\ndf_imputed&lt;-iris_imputed$ximp\n\ndf_imputed %&gt;% \n  miss_var_summary() %&gt;% \n  gt() \n\n\n\n\n\n\n\nvariable\nn_miss\npct_miss\n\n\n\n\nsepal_length\n0\n0\n\n\nsepal_width\n0\n0\n\n\npetal_length\n0\n0\n\n\npetal_width\n0\n0\n\n\nspecies_clean\n0\n0\n\n\n\n\n\n\n\n\niris_imputed$OOBerror\n\n     NRMSE        PFC \n0.14080577 0.05357143 \n\n\nThe error rates for both the categorical and numerical values are relatively low."
  },
  {
    "objectID": "iris_dataset.html#exploratory-data-analysis-eda",
    "href": "iris_dataset.html#exploratory-data-analysis-eda",
    "title": "Cleaning Iris dataset",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nIn this section we will understand our data further using graphics to see the distribution of different variables. We will use boxplots, q-q plots, and histograms to assess distribution of variables.\n\nplot_sl_1&lt;-df_imputed |&gt; \n  ggplot(aes(x = sepal_length))+\n  geom_histogram()+\n  theme_bw() +\n  labs(title = \"Histogram - Imputed data\")\niris_sp1&lt;-iris |&gt; \n  ggplot(aes(x = Sepal.Length))+\n  geom_histogram()+\n  theme_bw()+\n  labs(title = \"Histogram - original data\")\n\nplot_sl_2&lt;-df_imputed |&gt; \n  ggplot(aes(sample = sepal_length))+\n  stat_qq()+\n  stat_qq_line(color = \"red\")+\n  theme_bw() +\n  labs(title = \"Q-Q plot for imputed data\")\n\niris_sl_2&lt;-iris |&gt; \n  ggplot(aes(sample = Sepal.Length))+\n  stat_qq()+\n  stat_qq_line(color = \"red\")+\n  theme_bw() +\n  labs(title = \"Q-Q Plot original data\")\n\ncowplot::plot_grid(plot_sl_1, iris_sp1,plot_sl_2,iris_sl_2, ncol = 2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "iris_dataset.html#visualisation",
    "href": "iris_dataset.html#visualisation",
    "title": "Cleaning Iris dataset",
    "section": "VISUALISATION",
    "text": "VISUALISATION\nLoading&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"
  },
  {
    "objectID": "contact.html#get-in-touch",
    "href": "contact.html#get-in-touch",
    "title": "contact",
    "section": "Get in Touch",
    "text": "Get in Touch\nReach out for collaborations, R workshops, or data science opportunities:\n\nEmail: d.mwale@sms.ed.ac.uk\nPhone: +265993627367\nGitHub: mwaledaveed99"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "My name is David Mwale. I am a second-year student at the University of Edinburgh, studying Data Science for Health and Social Care. My interests include Statistical Modelling, Data Cleaning, Visualization, building data pipelines for automation, and Machine Learning."
  },
  {
    "objectID": "about.html#educcation-experience",
    "href": "about.html#educcation-experience",
    "title": "About Me",
    "section": "Educcation & Experience",
    "text": "Educcation & Experience\n\nMSc in Data Science for Health and Social care | University of Edinburgh| 2023- present\nDiploma in Monitoring and Evaluation | The Catholic University of Malawi | 2018-20\nBSc Agricultural Economics | University of Malawi | 2011-15\nRUsers Malawi lead organiser | Lilongwe, Malawi | 2024- present"
  },
  {
    "objectID": "about.html#business-intelligence",
    "href": "about.html#business-intelligence",
    "title": "About Me",
    "section": "Business Intelligence ",
    "text": "Business Intelligence \n\nPowerBI\n\n\nContact \n\nEmail: d.mwale@sms.ed.ac.uk\nPhone: +265 993 627 367\nLinkedIn"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Portfolio",
    "section": "",
    "text": "Welcome to my portfolio! I am a data science student showcasing my projects and skills in data science, statistical modeling, and machine learning. In my almost 2 years with the University of Edinburgh, i have learned, relearned, and unlearned regarding Data science in health and social care. What I have learned is much more than i will be able to showcase through this platform. Experienced in Python, SQL, R programming, and health data analysis, with focus on reproducible research."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "My Portfolio",
    "section": "",
    "text": "Welcome to my portfolio! I am a data science student showcasing my projects and skills in data science, statistical modeling, and machine learning. In my almost 2 years with the University of Edinburgh, i have learned, relearned, and unlearned regarding Data science in health and social care. What I have learned is much more than i will be able to showcase through this platform. Experienced in Python, SQL, R programming, and health data analysis, with focus on reproducible research."
  },
  {
    "objectID": "index.html#my-projects",
    "href": "index.html#my-projects",
    "title": "My Portfolio",
    "section": "My Projects",
    "text": "My Projects\n\nData Wrangling in R: Cleaning and transforming datasets using tidyverse and other R packages.\nData Visualization: Creating insightful visualizations with ggplot2 and interactive dashboards.\nStatistical Modelling for Epidemiology: Applying statistical models to analyze health data trends.\nMachine Learning with R: Building predictive models using tidymodels and other ML frameworks."
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "My Portfolio",
    "section": "Skills",
    "text": "Skills\n\nLanguages\n\nR\nSQL\nPython"
  }
]